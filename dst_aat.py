# -*- coding: utf-8 -*-
"""DST AAT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ixa67eTTqSwKJkkEa0k2TUOs2pp99m6s

## Library Application
"""

from collections import defaultdict

class Book:
    def __init__(self, bookname,year_of_release,genre, ISBN,publisher):
        self.bookname = bookname
        self.genre = genre
        self.year_of_release = year_of_release
        self.ISBN = ISBN
        self.publisher = publisher

class Library:
    def __init__(self):
        self.author_graph = defaultdict(list)

    def add_author(self, author):
        if author not in self.author_graph:
            self.author_graph[author.lower()] = []

    def add_book(self, author, book, year_of_release, genre, ISBN,publisher):
        author = author.lower()
        book = book.lower()
        genre = genre.lower()
        publisher = publisher.lower()
        book_instance = Book(book, year_of_release, genre, ISBN,publisher)
        self.add_author(author)
        self.author_graph[author].append(book_instance)

    def display_library(self):
        print("Library")
        for author, books in self.author_graph.items():
            print(f"\tAuthor: {author.title()}")
            for book in books:
                print(f"\t\tTitle : {book.bookname.title()}")
                print(f"\t\t\tYear of Release : {book.year_of_release}")
                print(f"\t\t\tGenre : {book.genre.title()}")
                print(f"\t\t\tISBN : {book.ISBN}")
                print(f"\t\t\tPublisher : {book.publisher.title()}\n")
            print('\n')


    def search_book_title(self, title):
        found = False
        for author, books in self.author_graph.items():
            for book in books:
                if book.bookname.lower() == title.lower():
                    print(f"Book is in the library:")
                    print(f"\tAuthor: {author.title()}")
                    print(f"\t\tTitle : {book.bookname.title()}")
                    print(f"\t\t\tYear of Release : {book.year_of_release}")
                    print(f"\t\t\tGenre : {book.genre.title()}")
                    print(f"\t\t\tISBN : {book.ISBN}")
                    print(f"\t\t\tPublisher : {book.publisher.title()}")
                    found = True
        if not found:
            print(f"Book is not in the library.")

    def search_book_isbn(self, isbn):
        found = False
        for author, books in self.author_graph.items():
            for book in books:
                if book.ISBN == isbn:
                    print(f"Book is in the library:")
                    print(f"\tAuthor: {author.title()}")
                    print(f"\t\tTitle : {book.bookname}")
                    print(f"\t\t\tYear of Release : {book.year_of_release}")
                    print(f"\t\t\tGenre : {book.genre.title()}")
                    print(f"\t\t\tISBN : {book.ISBN}")
                    print(f"\t\t\tPublisher : {book.publisher.title()}")
                    found = True
        if not found:
            print(f"Book is not in the library.")

    def search_books_genre(self,gen):
        found = False
        for author, books in self.author_graph.items():
            for book in books:
                if book.genre == genre:
                    print(f"\tAuthor: {author.title()}")
                    print(f"\t\tTitle : {book.bookname.title()}")
                    print(f"\t\t\tYear of Release : {book.year_of_release}")
                    print(f"\t\t\tGenre : {book.genre.title()}")
                    print(f"\t\t\tISBN : {book.ISBN}")
                    print(f"\t\t\tPublisher : {book.publisher.title()}")
                    found = True
        if not found:
            print(f"Book is not in the library.")

    def search_books_author(self,auth):
        found = False
        for author, books in self.author_graph.items():
            for book in books:
                if author == auth:
                    print(f"\tAuthor: {author.title()}")
                    print(f"\t\tTitle : {book.bookname.title()}")
                    print(f"\t\t\tYear of Release : {book.year_of_release}")
                    print(f"\t\t\tGenre : {book.genre.title()}")
                    print(f"\t\t\tISBN : {book.ISBN}")
                    print(f"\t\t\tPublisher : {book.publisher.title()}")
                    found = True
        if not found:
            print(f"Book is not in the library.")


lib = Library()

lib.add_book("Rick Riordan",'Percy Jackson - The Lightning Thief',2005,"Fantasy",132465798,'Penguin')
lib.add_book("Rick Riordan",'Magnus Chase - The swOrd of Summer',2015,"Fantasy",346797156,'Pearson')
lib.add_book("J.R.R. Tolkien", "The Fellowship of the Ring", 1954, "Fantasy",112233669,'Pearson')
lib.add_book("Jane Austen", "Pride and Prejudice", 1813, "Romance",336645598,'Pearson')
lib.add_book("Agatha Christie", "Murder on the Orient Express", 1934, "Mystery",654798543,'Pearson')
lib.add_book("Harper Lee", "To Kill a Mockingbird", 1960, "Fiction",679165476,'Pearson')
user = input("Enter\n1 to see current collection\n2 to add a book\n3 to search a boook by title\n4 to search a book by ISBN\n5 to search a book by Genre\n6 to search a book by Author\n")

while user != "":
  if user == '1':
    lib.display_library()

  elif user == '2':
    author = input("Enter Author : ")
    title = input("Enter title : ")
    year = int(input("Enter year of release : "))
    genre = input("Enter Genre : ")
    isbn = int(input("Enter ISBN : "))
    lib.add_book(author,title,year,genre,isbn)
    print("\nBook Added ")
    lib.search_book_isbn(isbn)

  elif user == '3':
    title = input("Enter title : ")
    lib.search_book_title(title)
  elif user == '4':
    isbn = int(input("Enter ISBN : "))
    lib.search_book_isbn(isbn)
  elif user == '5':
    genre = input("Enter Genre : ")
    lib.search_books_genre(genre)
  elif user == '6':
    genre = input("Enter Author : ")
    lib.search_books_author(author)

  user = input("Enter\n1 to see current collection\n2 to add a book\n3 to search a boook by title\n4 to search a book by ISBN\n5 to search a book by Genre\n6 to search a book by Author\n")

